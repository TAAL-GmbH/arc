---
logLevel: DEBUG # mode of logging. Value can be one of DEBUG | INFO | WARN | ERROR
logFormat: text # format of logging. Value can be one of text | json | tint
profilerAddr: localhost:9999 # address to start profiler server on (optional)
prometheusEndpoint: /metrics # endpoint for prometheus metrics (optional)
prometheusAddr: :2112 # port for serving prometheus metrics
grpcMessageSize: 100000000 # maximum grpc message size
network: regtest # bitcoin network to connect to. Value can be one of mainnet | testnet | regtest
messageQueue:
  streaming:
    enabled: false  # if enabled, message queue can store messages
    fileStorage: false # if enabled messages are persisted on disk instead of in memory
  URL: nats://nats:4222 # URL for message queue
tracing: # (optional)
  dialAddr: http://localhost:4317 # address where traces are exported to

peerRpc: # rpc configuration for bitcoin node
  password: bitcoin
  user: bitcoin
  host: localhost
  port: 18332

broadcasting:
  mode: unicast
  ipv6Enabled: true
  multicastGroup: 172.28.56.77
  peers: # list of bitcoin node peers to connect to
  - host: localhost
    port:
      p2p: 18333 # port for p2p connection
      zmq: 28332 # port for zmq connection
  - host: localhost
    port:
      p2p: 18334
  - host: localhost
    port:
      p2p: 18335
  interfaces:
    - "eth0"
    - "eth1"
  

cache:
  engine: freecache # cache engine - freecache/redis
  freecache: # freecache configuration
    size: 1000000 # size of cache
  redis:
    addr: "localhost:6379"
    password: ""
    db: 1

metamorph:
  listenAddr: localhost:8001 # address space for metamorph to listen on. Can be for example localhost:8001 or :8001 for listening on all addresses
  dialAddr: localhost:8001 # address for other services to dial metamorph service
  db:
    mode: postgres # db mode indicates which db to use. At the moment only postgres is offered
    postgres: # postgres db configuration in case that mode: postgres
      host: localhost
      port: 5432
      name: metamorph
      user: arc
      password: arc
      maxIdleConns: 10 # maximum idle connections
      maxOpenConns: 80 # maximum open connections
      sslMode: disable
  processorCacheExpiryTime: 24h # time after which processor cache is cleaned
  unseenTransactionRebroadcastingInterval: 60s # time interval in which unseen transactions are re-broadcasted
  maxRetries: 1000 # maximum number of times a transaction is re-broadcasted
  processStatusUpdateInterval: 5s # interval of processing status updates
  checkSeenOnNetworkOlderThan: 3h # transactions with SEEN_ON_NETWORK status will be re-requested from blocktx which are older than checkSeenOnNetworkOlderThan
  checkSeenOnNetworkPeriod: 4h # transactions with SEEN_ON_NETWORK status will be re-requested from blocktx which are inserted in the last checkSeenOnNetworkPeriod
  monitorPeers: false # if enabled, peers which do not receive alive signal from nodes will be restarted
  checkUtxos: false # force check each utxo for validity. If enabled ARC connects to bitcoin node using rpc for each utxo
  health:
    serverDialAddr: localhost:8005 # address at which the grpc health server is exposed
    minimumHealthyConnections: 2 # minimum number of healthy peer connections for the processor to be considered healthy
  rejectCallbackContaining: [ "http://localhost", "https://localhost" ]
  stats:
    notSeenTimeLimit: 10m # amount of time after storing at which a non-seen tx will be counted towards not seen stat
    notMinedTimeLimit: 20m # amount of time after storing at which a seen but not mined tx will be counted towards not mined stat

blocktx:
  listenAddr: localhost:8011 # address space for blocktx to listen on. Can be for example localhost:8011 or :8011 for listening on all addresses
  dialAddr: localhost:8011 # address for other services to dial blocktx service
  healthServerDialAddr: localhost:8006 # address at which the grpc health server is exposed
  db:
    mode: postgres # db mode indicates which db to use. At the moment only postgres is offered
    postgres: # postgres db configuration in case that mode: postgres
      host: localhost
      port: 5432
      name: blocktx
      user: arc
      password: arc
      maxIdleConns: 10 # maximum idle connections
      maxOpenConns: 80 # maximum open connections
      sslMode: disable
  recordRetentionDays: 28 # number of days for which data integrity is ensured
  registerTxsInterval: 10s # time interval to read from the channel registered transactions
  monitorPeers: false # if enabled, peers which do not receive alive signal from nodes will be restarted
  fillGapsInterval: 15m # time interval to check and fill gaps in processed blocks
  maxAllowedBlockHeightMismatch: 3 # maximum number of blocks that can be ahead of current highest block in blocktx, used for merkle roots verification

api:
  address: localhost:9090 # address to start api server on
  wocApiKey: "mainnet_XXXXXXXXXXXXXXXXXXXX" # api key for www.whatsonchain.com
  wocMainnet: false # query main or test net on www.whatsonchain.com
  defaultPolicy: # default policy of bitcoin node
    excessiveblocksize: 2000000000
    blockmaxsize: 512000000
    maxtxsizepolicy: 100000000
    maxorphantxsize: 1000000000
    datacarriersize: 4294967295
    maxscriptsizepolicy: 100000000
    maxopsperscriptpolicy: 4294967295
    maxscriptnumlengthpolicy: 10000
    maxpubkeyspermultisigpolicy: 4294967295
    maxtxsigopscountspolicy: 4294967295
    maxstackmemoryusagepolicy: 100000000
    maxstackmemoryusageconsensus: 200000000
    limitancestorcount: 10000
    limitcpfpgroupmemberscount: 25
    maxmempool: 2000000000
    maxmempoolsizedisk: 0
    mempoolmaxpercentcpfp: 10
    acceptnonstdoutputs: true
    datacarrier: true
    minminingtxfee: 1e-8
    maxstdtxvalidationduration: 3
    maxnonstdtxvalidationduration: 1000
    maxtxchainvalidationbudget: 50
    validationclockcpu: true
    minconsolidationfactor: 20
    maxconsolidationinputscriptsize: 150
    minconfconsolidationinput: 6
    minconsolidationinputmaturity: 6
    acceptnonstdconsolidationinput: false

k8sWatcher: # (optional, used only when deploying arc to k8s)
  namespace: arc-testnet

callbacker:
  listenAddr: localhost:8021 # address space for callbacker to listen on. Can be for example localhost:8021 or :8021 for listening on all addresses
  dialAddr: localhost:8021 # address for other services to dial callbacker service
  health:
    serverDialAddr: localhost:8025 # address at which the grpc health server is exposed
  pause: 0s # pause between sending next callback to the same receiver
  batchSendInterval: 5s # interval at witch batched callbacks are send (default 5s)
  db:
    mode: postgres # db mode indicates which db to use. At the moment only postgres is offered
    postgres: # postgres db configuration in case that mode: postgres
      host: localhost
      port: 5432
      name: callbacker
      user: arc
      password: arc
      maxIdleConns: 10 # maximum idle connections
      maxOpenConns: 80 # maximum open connections
      sslMode: disable
  pruneInterval: 24h # interval at which old or failed callbacks are pruned from the store
  pruneOlderThan: 336h # age threshold for pruning callbacks (older than this value will be removed)
  quarantineCheckInterval: 1m # interval at which the store is checked for quarantined callbacks to be re-sent
  quarantinePolicy:
    baseDuration: 5m # initial duration a callback and its receiver is quarantined after failure
    permQuarantineAfter: 24h # maximum time a callback can remain unsent before it's put in permanent quarantine
