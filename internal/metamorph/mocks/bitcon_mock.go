// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mocks

import (
	"github.com/bitcoin-sv/arc/internal/metamorph"
	"github.com/ordishs/go-bitcoin"
	"sync"
)

// Ensure, that BitcoinNodeMock does implement metamorph.BitcoinNode.
// If this is not the case, regenerate this file with moq.
var _ metamorph.BitcoinNode = &BitcoinNodeMock{}

// BitcoinNodeMock is a mock implementation of metamorph.BitcoinNode.
//
//	func TestSomethingThatUsesBitcoinNode(t *testing.T) {
//
//		// make and configure a mocked metamorph.BitcoinNode
//		mockedBitcoinNode := &BitcoinNodeMock{
//			GetTxOutFunc: func(txHex string, vout int, includeMempool bool) (*bitcoin.TXOut, error) {
//				panic("mock out the GetTxOut method")
//			},
//		}
//
//		// use mockedBitcoinNode in code that requires metamorph.BitcoinNode
//		// and then make assertions.
//
//	}
type BitcoinNodeMock struct {
	// GetTxOutFunc mocks the GetTxOut method.
	GetTxOutFunc func(txHex string, vout int, includeMempool bool) (*bitcoin.TXOut, error)

	// calls tracks calls to the methods.
	calls struct {
		// GetTxOut holds details about calls to the GetTxOut method.
		GetTxOut []struct {
			// TxHex is the txHex argument value.
			TxHex string
			// Vout is the vout argument value.
			Vout int
			// IncludeMempool is the includeMempool argument value.
			IncludeMempool bool
		}
	}
	lockGetTxOut sync.RWMutex
}

// GetTxOut calls GetTxOutFunc.
func (mock *BitcoinNodeMock) GetTxOut(txHex string, vout int, includeMempool bool) (*bitcoin.TXOut, error) {
	if mock.GetTxOutFunc == nil {
		panic("BitcoinNodeMock.GetTxOutFunc: method is nil but BitcoinNode.GetTxOut was just called")
	}
	callInfo := struct {
		TxHex          string
		Vout           int
		IncludeMempool bool
	}{
		TxHex:          txHex,
		Vout:           vout,
		IncludeMempool: includeMempool,
	}
	mock.lockGetTxOut.Lock()
	mock.calls.GetTxOut = append(mock.calls.GetTxOut, callInfo)
	mock.lockGetTxOut.Unlock()
	return mock.GetTxOutFunc(txHex, vout, includeMempool)
}

// GetTxOutCalls gets all the calls that were made to GetTxOut.
// Check the length with:
//
//	len(mockedBitcoinNode.GetTxOutCalls())
func (mock *BitcoinNodeMock) GetTxOutCalls() []struct {
	TxHex          string
	Vout           int
	IncludeMempool bool
} {
	var calls []struct {
		TxHex          string
		Vout           int
		IncludeMempool bool
	}
	mock.lockGetTxOut.RLock()
	calls = mock.calls.GetTxOut
	mock.lockGetTxOut.RUnlock()
	return calls
}
