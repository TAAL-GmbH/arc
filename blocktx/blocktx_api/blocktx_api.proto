syntax = "proto3";

option go_package = ".;blocktx_api";

package blocktx_api;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

service BlockTxAPI {
  // Health returns the health of the API.
  rpc Health (google.protobuf.Empty) returns (HealthResponse) {}

  // ClearTransactions clears transaction data
  rpc ClearTransactions(ClearData) returns (ClearDataResponse) {}

  // ClearBlocks clears block data
  rpc ClearBlocks(ClearData) returns (ClearDataResponse) {}

  // ClearBlockTransactionsMap clears block-transaction-map data
  rpc ClearBlockTransactionsMap(ClearData) returns (ClearDataResponse) {}
}

// swagger:model HealthResponse
message HealthResponse {
  bool ok = 1;
  string details = 2;
  google.protobuf.Timestamp timestamp = 3;
}

// swagger:model Block {
message Block {
  bytes hash = 1; // Little endian
  bytes previous_hash = 2; // Little endian
  bytes merkle_root = 3; // Little endian
  uint64 height = 4;
  bool orphaned = 5;
  bool processed = 6;
}

// swagger:model Transactions
message Transactions {
  repeated Transaction transactions = 1;
}

message TransactionBlock {
  bytes block_hash = 1; // Little endian
  uint64 block_height = 2;
  bytes transaction_hash = 3; // Little endian
  string merklePath = 4;
}

message TransactionBlocks {
  repeated TransactionBlock transaction_blocks = 1;
}

// swagger:model MinedTransactions
message MinedTransactions {
  Block block = 1; // Little endian
  repeated Transaction transactions = 2; // Little endian
}

// swagger:model Transaction
message Transaction {
  bytes hash = 1; // Little endian
  string source = 2; // This is the metamorph address:port
}

// swagger:model Height
message Height {
  uint64 height = 1;
}

// swagger:model ClearData
message ClearData {
  int32 retentionDays = 1;
}

// swagger:model ClearDataResponse
message ClearDataResponse {
  int64 rows = 1;
}

message Hash {
  bytes hash = 1;
}

message MerklePath {
  string merklePath = 1;
}

message TransactionAndSource {
  bytes hash = 1;
  string source = 2;
}

// swagger:model BlockAndSource
message BlockAndSource {
  bytes hash = 1;
  string source = 2;
}
